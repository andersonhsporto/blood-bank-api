version:  "3.8"
services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_DB=${DATABASE_DB}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    container_name: postgres.bloodbank.com
    ports:
      - "5432:5432"
    volumes:
      -  postgres_data:/var/lib/postgresql/data
      - ./conf/postgres/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_DB}"]
      interval: 15s
      timeout: 25s
    networks:
      - bank-network
    command :
      [
        "postgres",
        "-c",
        "config_file=/docker-entrypoint-initdb.d/postgresql.conf"
      ]

  server:
    build:
      context: ./
    restart: always
    environment:
        - DATABASE_URL = ${DATABASE_URL}
        - DATABASE_DRIVER = ${DATABASE_DRIVER}
        - DATABASE_USER = ${DATABASE_USER}
        - DATABASE_PASSWORD = ${DATABASE_PASSWORD}
        - DATABASE_DB = ${DATABASE_DB}
        - API_CONTEXT_PATH = ${API_CONTEXT_PATH}
    container_name: server.blodbank.com
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks :
      - bank-network

volumes:
  postgres_data:

networks:
  bank-network:
    driver: bridge
